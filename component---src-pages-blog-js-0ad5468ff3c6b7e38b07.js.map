{"version":3,"file":"component---src-pages-blog-js-0ad5468ff3c6b7e38b07.js","mappings":"mLAWMA,EAAaC,EAAAA,QAAAA,IAAAA,WAAH,2DAAGA,CAAH,kMAiBVC,EAAaD,EAAAA,QAAAA,IAAAA,WAAH,2DAAGA,CAAH,gFAQVE,EAAYF,EAAAA,QAAAA,GAAAA,WAAH,0DAAGA,CAAH,qHAcTG,EAAiBH,EAAAA,QAAAA,IAAAA,WAAH,+DAAGA,CAAH,mGAUdI,EAAqBJ,EAAAA,QAAAA,IAAAA,WAAH,mEAAGA,CAAH,2IAWlBK,EAAYL,EAAAA,QAAAA,IAAAA,WAAH,0DAAGA,CAAH,0PAmBTM,EAAUN,EAAAA,QAAAA,IAAAA,WAAH,wDAAGA,CAAH,sGAUPO,EAA0BP,EAAAA,QAAAA,IAAAA,WAAH,wEAAGA,CAAH,6FAQvBQ,EAAcR,EAAAA,QAAAA,EAAAA,WAAH,4DAAGA,CAAH,MAEXS,EAAc,SAACC,EAASC,EAAKC,EAAWC,EAAaC,EAAiBC,GAC1E,IAAIC,EAAiB,CAAC,QAAS,SAC3BC,EAAqB,CAAC,UAAW,WACjCN,GAAOD,GACTE,EAAU,IACVC,EAAYG,GACZF,EAAgBG,KAEhBL,EAAUF,GACVM,EAAeD,GAAS,UACxBF,EAAYG,GACZC,EAAmBF,GAAS,QAC5BD,EAAgBG,KAIdC,EAAc,SAAC,GAAqB,IAAnBP,EAAkB,EAAlBA,IAAKQ,EAAa,EAAbA,OAC1B,GAA4BC,EAAAA,EAAAA,UAAS,CAAC,QAAS,UAAxCC,EAAP,KAAeC,EAAf,KACA,GAAoCF,EAAAA,EAAAA,UAAS,CAAC,UAAW,YAAlDG,EAAP,KAAmBC,EAAnB,KACA,OACE,gBAACjB,EAAD,KACE,gBAACH,EAAD,KACE,gBAACC,EAAD,CAAWoB,QAAS,kBAAMhB,EAAY,gBAAiBE,EAAKQ,EAAQG,EAAWE,EAAe,IAAIE,MAAO,CAACC,WAAYN,EAAO,KAC3H,gBAACf,EAAD,CAASoB,MAAO,CAACE,MAAOL,EAAW,KAAnC,kBAIF,gBAAClB,EAAD,CAAWoB,QAAS,kBAAMhB,EAAY,UAAWE,EAAKQ,EAAQG,EAAWE,EAAe,IAAIE,MAAO,CAACC,WAAYN,EAAO,KACvH,gBAACf,EAAD,CAASoB,MAAO,CAACE,MAAOL,EAAW,KAAnC,eASFM,EAAW,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACZC,EAAKD,EAAKE,YACVC,GAAiBC,EAAAA,EAAAA,GAASH,EAAGI,OAEnC,OACE,gBAACpC,EAAD,KACGkC,GACC,gBAAChC,EAAD,KACE,gBAAC,EAAAmC,EAAD,CAAaC,IAAKN,EAAGO,MAAOH,MAAOF,EAAgBM,SAAU,CAAEC,QAAS,MAI5E,gBAACtC,EAAD,KACE,gBAAC,EAAAuC,KAAD,CAAMC,GAAIZ,EAAKa,OAAOC,MAAOb,EAAGO,QAGjCP,EAAGc,MACF,gBAACrC,EAAD,KAAcuB,EAAGc,MAGlBd,EAAGe,QACF,gBAAC3C,EAAD,KACE,gBAAC,KAAD,WAAa4B,EAAGe,QAChB,gBAAC,KAAD,KAAUf,EAAGgB,MACb,gBAAC,KAAD,cAAgBhB,EAAGiB,QAGrBjB,EAAGe,QACH,gBAAC3C,EAAD,KACE,gBAAC,KAAD,KAAU4B,EAAGgB,MACb,gBAAC,KAAD,cAAgBhB,EAAGiB,SA6D7B,UA7CiB,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAClB,GAAsB7B,EAAAA,EAAAA,UAAS,IAAxBT,EAAP,KAAYQ,EAAZ,KACA,OACE,gBAAC,KAAD,CAAYmB,MAAM,QAChB,gBAACpB,EAAD,CAAaP,IAAKA,EAAKQ,OAAQA,IAC/B,gBAAC,KAAD,CAAe+B,WAAW,OACvBD,EAAKE,kBAAkBC,MAAMC,KAAI,gBAAGC,EAAH,EAAGA,KAAH,QAC9B3C,GAAO2C,EAAKtB,YAAYgB,KAAKO,SAAS5C,KAAS,gBAACkB,EAAD,CAAUC,KAAMwB","sources":["webpack://pcv-website/./src/pages/blog.js"],"sourcesContent":["import React, { useState } from \"react\"\nimport s from \"styled-components\"\nimport {graphql, Link} from \"gatsby\"\nimport {GatsbyImage, getImage} from \"gatsby-plugin-image\"\n\nimport {GridContainer, PageLayout} from \"../ui/layout\"\nimport {SubText, Subtitle} from \"../ui/Typography\"\n\nimport \"../styles/base.scss\"\n\n\nconst CardLayout = s.div`\n  border-top: 1px solid #e6e6e6;\n  width: 100%;\n  max-width: 450px;\n  padding-top: 30px;\n  padding-bottom: 30px;\n  flex: 0 0 auto;\n\n  @media (min-width: 1100px) {\n    flex: 0 0 500px;\n  }\n\n  @media (max-width: 1100px) {\n    width: 350px;\n  }\n`\n\nconst CoverImage = s.div`\n  width: 100%;\n  margin-bottom: 25px;\n  border-radius: 5px;\n  overflow: hidden;\n  opacity: 1;\n`\n\nconst CardTitle = s.h2`\n  font-size: 1.75rem;\n  line-height: 2rem;\n\n  & > * {\n    color: #333333;\n    font-weight: 900;\n  }\n\n  &:hover > * {\n    text-decoration: underline;\n  }\n`\n\nconst PublishingInfo = s.div`\n  margin-top: 10px;\n  margin-bottom: 10px;\n\n  & > p {\n    font-size: .85rem;\n    color: var(--c-text-primary-muted);\n  }\n`\n\nconst TagSelectorWrapper = s.div`\n  display: flex;\n  flex-direction: row;\n  align-items: flex-start;\n  padding: 10px;\n  gap: 12px;\n  position: relative;\n  background: #F1F1F1;\n  border-radius: 58px;\n`\n\nconst TagOption = s.div`\n  display: flex;\n  flex-direction: row;\n  align-items: flex-start;\n  padding: 12px 25px;\n  gap: 10px;\n  background: white;\n  border-radius: 30px;\n  flex: none;\n  flex-grow: 0;\n  border: 1px solid white;\n\n  &:hover {\n\tcursor: pointer;\n\tborder: 1px solid #217CFF;\n\ttransition: all ease-in-out 0.2s;\n  }\n`\n\nconst TagText = s.div`\n  font-style: normal;\n  font-weight: 600;\n  font-size: 20px;\n  line-height: 24px;\n  flex: none;\n  order: 0;\n  flex-grow: 0;\n`\n\nconst TagSelectorOuterWrapper = s.div`\n  display: flex;\n  width = 100%;\n  align-items: center;\n  justify-content: center;\n  margin-bottom: 30px;\n`\n\nconst Description = s.p``\n\nconst optionClick = (tagType, tag, tagSetter, colorSetter, textColorSetter, index) => {\n  let tempColorArray = ['white', 'white']\n  let tempTextColorArray = ['#217CFF', '#217CFF']\n  if (tag == tagType) {\n    tagSetter(\"\")\n    colorSetter(tempColorArray)\n    textColorSetter(tempTextColorArray)\n  } else {\n    tagSetter(tagType)\n    tempColorArray[index] = '#217CFF'\n    colorSetter(tempColorArray)\n    tempTextColorArray[index] = 'white'\n    textColorSetter(tempTextColorArray)\n  }\n}\n\nconst TagSelector = ({ tag, setTag }) => {\n  const [colors, setColors] = useState(['white', 'white'])\n  const [textColors, setTextColors] = useState(['#217CFF', '#217CFF'])\n  return (\n    <TagSelectorOuterWrapper>\n      <TagSelectorWrapper>\n        <TagOption onClick={() => optionClick(\"Energy Policy\", tag, setTag, setColors, setTextColors, 0)} style={{background: colors[0]}}>\n          <TagText style={{color: textColors[0]}}>\n            Energy Policy\n          </TagText>\n        </TagOption>\n        <TagOption onClick={() => optionClick(\"General\", tag, setTag, setColors, setTextColors, 1)} style={{background: colors[1]}}>\n        <TagText style={{color: textColors[1]}}>\n            General\n          </TagText>\n        </TagOption>\n      </TagSelectorWrapper>\n    </TagSelectorOuterWrapper>\n  )\n}\n\nconst BlogCard = ({ card }) => {\n  const fm = card.frontmatter\n  const coverImageData = getImage(fm.image)\n\n  return (\n    <CardLayout>\n      {coverImageData &&\n        <CoverImage>\n          <GatsbyImage alt={fm.title} image={coverImageData} imgStyle={{ opacity: 1 }}/>\n        </CoverImage>\n      }\n\n      <CardTitle>\n        <Link to={card.fields.slug}>{fm.title}</Link>\n      </CardTitle>\n\n      {fm.desc &&\n        <Description>{fm.desc}</Description>\n      }\n\n      {fm.author &&\n        <PublishingInfo>\n          <SubText>By {fm.author}</SubText>\n          <SubText>{fm.date}</SubText>\n          <SubText>Tags: {fm.tags}</SubText>\n        </PublishingInfo>\n      }\n      {!fm.author &&\n        <PublishingInfo>\n          <SubText>{fm.date}</SubText>\n          <SubText>Tags: {fm.tags}</SubText>\n        </PublishingInfo>\n      }\n\n      {/*\n      <div>\n        {fm.tags && fm.tags.map( (tag) => (\n          <span className=\"tag\" css={`margin-right: 5px;`}>{tag}</span>\n        ))}\n      </div>\n      */}\n    </CardLayout>\n  )\n}\n\n\nconst BlogPage = ({ data }) => {\n  const [tag, setTag] = useState(\"\")\n  return (\n    <PageLayout title=\"Blog\">\n      <TagSelector tag={tag} setTag={setTag} />\n      <GridContainer childWidth=\"450\">\n        {data.allMarkdownRemark.edges.map(({ node }) => (\n          (!tag || node.frontmatter.tags.includes(tag)) && <BlogCard card={node} />\n        ))}\n      </GridContainer>\n    </PageLayout>\n  )\n}\n\nexport const query = graphql`\n  {\n    allMarkdownRemark(\n      sort: { fields: frontmatter___date, order: DESC }\n      filter: { fileAbsolutePath: { regex: \"/blog/.+md$/\" } }\n    ) {\n      edges {\n        node {\n          frontmatter {\n            image {\n              childImageSharp {\n                gatsbyImageData(\n                  placeholder: TRACED_SVG\n                )\n              }\n            }\n            title\n            author\n            date(formatString: \"MMMM D, YYYY\")\n            desc\n            tags\n          }\n          fields {\n            slug\n          }\n        }\n      }\n    }\n  }\n`\n\nexport default BlogPage\n"],"names":["CardLayout","s","CoverImage","CardTitle","PublishingInfo","TagSelectorWrapper","TagOption","TagText","TagSelectorOuterWrapper","Description","optionClick","tagType","tag","tagSetter","colorSetter","textColorSetter","index","tempColorArray","tempTextColorArray","TagSelector","setTag","useState","colors","setColors","textColors","setTextColors","onClick","style","background","color","BlogCard","card","fm","frontmatter","coverImageData","getImage","image","G","alt","title","imgStyle","opacity","Link","to","fields","slug","desc","author","date","tags","data","childWidth","allMarkdownRemark","edges","map","node","includes"],"sourceRoot":""}